// <auto-generated />
using System;
using FrontDeskApp.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FrontDeskApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221031030814_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FrontDeskApp.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("IsSoftDeleted")
                        .HasColumnType("tinyint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(8)
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("IsSoftDeleted");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0fae19d5-bfee-430a-a466-21dbb65d5d38"),
                            FirstName = "Noel",
                            IsSoftDeleted = (byte)0,
                            LastName = "Francisco",
                            MiddleName = "Gonzales",
                            PhoneNo = "123456789"
                        },
                        new
                        {
                            Id = new Guid("416088b3-2b6d-4111-91cf-77862d010423"),
                            FirstName = "Tony",
                            IsSoftDeleted = (byte)0,
                            LastName = "Starks",
                            PhoneNo = "987654321"
                        });
                });

            modelBuilder.Entity("FrontDeskApp.Domain.Entities.Storage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<byte>("IsSoftDeleted")
                        .HasColumnType("tinyint");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("StorageTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(8)
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("IsSoftDeleted");

                    b.HasIndex("StorageTypeId");

                    b.ToTable("Storage", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6838d6e1-3706-4f2a-abbf-d033d12c6316"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC01",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("e422b5a2-d473-4433-8813-38df9786482c"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC02",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("13e670de-c2b8-4a8e-8dee-0c9b316f5204"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC03",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("ec41c0ea-3243-49d6-bb0a-ae7172d2e56e"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC04",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("4f59b898-1c59-46b4-a769-30c6eda0fa6b"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC05",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("ba0a0e59-33ef-4f09-9a50-cd44eec5f39e"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC06",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("ea7a28ed-7dfa-4142-acb5-6c062c97fc90"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC07",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("c5f7698f-2beb-493b-89bb-29cf50820097"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC08",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("a2d31147-244a-4018-b690-4308c0b71e69"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC09",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("7333ff02-b2c6-4e79-8643-6fa568fb4815"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC10",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("29044c4a-321a-48a4-a6dc-fa8bca81913d"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC11",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("0bb1ca8c-93d9-4f88-8a16-88a24021fef9"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC12",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("02c9c8bf-4519-4108-a2a3-2551daf712f5"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC13",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("0c993c3d-bde8-4481-aa8f-120d431818bd"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC14",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("52582dfa-afb9-4065-ab65-70b24b523485"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC15",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("e9ab15bc-658f-476f-a010-85cee06666ce"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC16",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("a42cfb2f-8b80-4b99-9f0c-935f457bc1d2"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC17",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("b5663d62-6c0d-48f4-8d39-0adfe05ba876"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC18",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("002ee9ab-79d3-4b63-8c52-0962ee991116"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC19",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("e3ece54d-e532-4c64-a410-d75f7469515e"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC20",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("69fe9808-ad67-4498-b778-380d0654042c"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC21",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("6bbf8d3e-7a94-4797-91e2-1a92193c1d3a"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC22",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("8314b7c0-a447-4cac-b934-e618978e06f2"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC23",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("ca270cbb-6772-474a-9176-dda0479bffc8"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC24",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("e21cf2d5-ffe9-4c15-af1d-28ca2cf7beb6"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC25",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("40b02e79-377f-4f03-8630-cda5b14b2cc0"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC26",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("b08da94e-00cf-4a34-86ef-d6d22de7a858"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC27",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("e15f0204-4e65-4877-bc73-4df104650bd9"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC28",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("87c8cac0-e0e8-4b56-91f5-cb163406efeb"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC29",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("a9b22ef1-1e64-411b-8568-0156fc5ba98b"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC30",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("c15edfa0-2721-4c61-ab8e-876f5ced711d"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC31",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("ca629c82-d1ab-4962-bee4-c1fb01367ddd"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC32",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("6284678b-8016-4313-aa13-98c14f55c3d7"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC33",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("b6d6f11f-2060-40f6-9c2c-1908f00f424d"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC34",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("b4acace0-68f8-48ed-ad32-e373d3423edf"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC35",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("d666424f-8a60-4304-9d99-a4b634ea376a"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC36",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("71c6cecc-5964-45bf-9b1b-f1eaa31f8a91"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC37",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("3c038f6d-f202-4390-9637-f9727e4dec98"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC38",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("58901708-8f90-41bc-8279-f5ce5120a011"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC39",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("bb090fda-336c-41a5-86d2-a0dd09e2bcb0"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC40",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("7f256564-f00e-4c4f-ba32-1ca9839f5156"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC41",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("2711c9d8-83c6-4b32-a987-113d52490826"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC42",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("f537bf60-7f72-4e79-a364-0520085a1dc0"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC43",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("f37b7291-6318-4a45-b254-48aa0d60ac1e"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC44",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("b2c55887-3915-4dac-a987-153216de9db2"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC45",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("637ebb14-8d6b-414b-8b8f-da959b790ca2"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC46",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("696b1e43-1d33-4af5-827b-472b51e8f635"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC47",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("efa66d70-e276-4b3e-a66d-4138527121a6"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC48",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("d206eab6-32b0-4779-acc8-a23fa77e460e"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC49",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("1bea3fbd-23f4-4ec8-bf2e-79ae65ae6365"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC50",
                            StorageTypeId = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243")
                        },
                        new
                        {
                            Id = new Guid("811c08e9-59de-4629-b4f2-f7b5525d7a51"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC01",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("7381dfd1-91a7-47c8-b4af-a17b830c1440"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC02",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("4d92af47-0006-4180-a961-732c6b3ecf49"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC03",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("d5a83902-057d-45f4-a01e-55f504977dd0"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC04",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("fe30740e-06dc-4801-9137-da97120eb757"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC05",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("275d39a2-da63-48f0-b82a-f90938b34985"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC06",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("671a72a7-1a0b-47a9-a052-4edd3a29e1f8"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC07",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("e7732afe-7ba9-4d23-8fc9-de08028d71d3"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC08",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("b0d96e56-f756-441c-809a-40e812149d6e"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC09",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("e1b77b91-c592-4fcf-b0de-f2973287f10f"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC10",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("09099a2c-94e3-4eda-a70e-6980f6d5cd45"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC11",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("572428a4-cbdf-4676-a88b-f693a362cfde"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC12",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("c6cfffe2-240c-4118-9a59-af6f0b6c35bb"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC13",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("d9d59af5-6b23-433a-8864-eb54f625e1d8"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC14",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("8857874c-565f-48a8-96f6-a91405d70042"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC15",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("8a8cc34a-c79b-4482-b671-6d8ca76018c1"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC16",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("f63aae70-85aa-41e6-a3e0-820e36ccf8b3"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC17",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("62dee335-f982-4094-bcff-efcc55a1deea"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC18",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("ef5d761a-4b84-4ac8-bbc4-eb07e26b0e00"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC19",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("a299e84c-91c7-4541-8e50-4b6d27ca01a7"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC20",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("b7ce5959-62c8-4cb9-9253-f25d6fbd4cbf"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC21",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("8f25aa48-5717-4397-a892-306217ee6b29"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC22",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("34149861-da71-4e52-82a0-db57bee8c16d"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC23",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("2f97a483-6e80-46da-b121-79ab52ed4a94"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC24",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("244f76b0-86de-4eaf-a97a-24b93b7b4dcd"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC25",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("ed79de00-6aed-4265-91d2-f50cdaefee31"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC26",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("97a9469f-aa0c-4599-adde-3c65ed2f0f31"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC27",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("9f279d8c-5494-4e24-b27c-ad3319b827cb"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC28",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("b8df3d4c-2425-4b36-b282-c997ae0c3cf9"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC29",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("583677f9-5513-4bd3-896c-d7b8701912d9"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC30",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("218488c1-cfb6-42f6-8924-cc01fa73025c"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC31",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("c3ccb866-d39d-42fb-9de2-5356cd0a2369"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC32",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("f01a7f8a-be73-4445-af46-47ebaec67134"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC33",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("a5eb40b9-424e-4f91-98dc-a3753c3bb988"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC34",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("bb97929c-8bc6-4e83-9b3e-73afdd2c38c9"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC35",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("7c2a0195-0878-423a-a783-b664f490e8c1"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC36",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("c22b3a9f-726f-4498-81da-207ecffb20e0"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC37",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("82953fd2-5024-4c3d-a82f-2726bff12283"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC38",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("84ef84e2-b5db-41c1-949d-319cb7eeaacd"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC39",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("c0b7bc81-f69a-4f93-b595-fef771c232a7"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC40",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("02121dae-1bbc-4da8-902a-f245dd72560e"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC41",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("e27618da-60f3-4ddd-b76c-7a5e42f53142"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC42",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("7a0b774a-0fc0-4699-b9e5-7e33a3a5068a"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC43",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("8753c841-5a4e-4c08-8fe2-58a10f500d7c"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC44",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("5aac0765-1aa4-43c6-9c09-187454729286"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC45",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("482a7c68-431e-481a-af13-363f8c29bf2d"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC46",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("43bb647f-07f2-4931-9c19-d146dbbc7767"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC47",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("9f294d1c-a7ff-4832-9fd5-b1ad89c55448"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC48",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("7d27d71d-1a3f-40c0-b440-287b3befc267"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC49",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("5a0a9f54-71db-44e1-8dd1-d3e186cd09bd"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC50",
                            StorageTypeId = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad")
                        },
                        new
                        {
                            Id = new Guid("8a96c3f4-ecc6-4018-90b6-50683af10d7a"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC01",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("20849c8f-eacd-4bcf-8715-ed284430a0e1"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC02",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("5f38e16a-ef97-4e29-9b19-a6cd10e52a88"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC03",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("aa0c02cb-f158-4701-8418-5d1294fb2ddf"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC04",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("80f507d9-7eca-48e6-ad15-448917b98671"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC05",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("f846b4fc-a639-4d7c-9aac-98aa9231f121"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC06",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("b8f3f2b6-0c18-4478-86c9-d34ea14853f9"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC07",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("7e6b593e-e58a-4f9a-9b5f-e5a124e71da1"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC08",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("70d6fc00-e58a-48a9-ad18-41dd15e3046e"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC09",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("e70b96f4-daa9-42c9-95ba-bd73e91b016e"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC10",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("b08b131e-da76-41fe-bd44-54b6dd6ff6a2"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC11",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("5da8b8d8-d220-4859-bfcc-e474f5922097"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC12",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("54392e2f-5668-40a9-96f8-fadc4579a260"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC13",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("23a5d6c5-6433-4296-9049-bd308037d9c3"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC14",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("ea51904f-aa14-4ae5-9764-fe88182ca46d"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC15",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("4a3bf646-4510-4b00-bede-fdec2e4dc029"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC16",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("adf3a43a-4d05-4f42-81cd-2892b1fc954c"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC17",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("79c11d4e-32d0-4ae4-9759-b539c4c95027"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC18",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("a98b87f9-2287-4e21-a1a4-27eeaf128860"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC19",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("a97b08f9-b52f-4a77-aea1-14a6afab7d39"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC20",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("ac43df80-cd60-4992-9884-1c3a914f999f"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC21",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("97c39535-a456-4e48-b81b-d48744b65997"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC22",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("d33402f5-d206-43d6-84a1-7fef724effd3"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC23",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("80ae645a-d0ae-4fc9-b528-188f64f7cc4c"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC24",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("03632dbd-4986-4d97-8008-ceb73050dc82"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC25",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("272f296c-ea67-48b3-8d97-23d44ee368c5"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC26",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("e45f0d5e-6ebb-4374-b68f-141ab451c077"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC27",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("2e973419-139b-4b30-bdd1-a96d3fd15514"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC28",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("6f2101c0-0336-40fa-a521-adaf9dc3ffe6"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC29",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("71b65761-88fd-4797-b039-0e80c6b43396"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC30",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("5bbb9059-8a1c-401c-8ca4-8b2f0222126f"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC31",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("33e10fea-f227-412a-9e48-1e6d6f2bc1e0"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC32",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("975ef53b-65f8-48a7-a7f8-b748cba42887"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC33",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("18d80353-fc62-452c-b236-6b5a139cb24a"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC34",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("332af1b4-6184-4a45-8442-4078ae3bb8f1"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC35",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("3639228d-5a18-4e67-91b4-29600835e57a"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC36",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("f9ba1c36-0352-4f2d-8ffe-a93af0091722"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC37",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("e6d7f69d-b604-49d8-94ab-1691f5e59eab"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC38",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("97db7c43-469b-4147-8131-80ff67f33bf5"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC39",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("910d5c06-362a-4870-a7bb-f9f141ceaeb3"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC40",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("c80d1bc5-4c55-4a0c-87e6-f7161551da92"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC41",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("435aa786-a23a-4c03-8ddd-cee884875cfb"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC42",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("b0182323-6deb-4a32-9043-ab89a563479e"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC43",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("a835afdc-cb3c-4ac7-ac1f-f484dcef4f3f"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC44",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("513167c9-fa8e-480f-9fc9-2f4bd35c9355"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC45",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("2fbd8d65-1c4f-4eec-8b5c-fb0a323800e5"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC46",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("fc148b10-eb58-4434-b225-901ba8adbec8"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC47",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("e900a3e5-36d5-47b0-a480-18b4a592dac2"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC48",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("b76621f8-b418-49ab-8bec-189ed480f10a"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC49",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        },
                        new
                        {
                            Id = new Guid("6b579ef1-4fcd-4319-ae1b-e33652357192"),
                            IsAvailable = true,
                            IsSoftDeleted = (byte)0,
                            Location = "LOC50",
                            StorageTypeId = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41")
                        });
                });

            modelBuilder.Entity("FrontDeskApp.Domain.Entities.StorageOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BoxSize")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("IsSoftDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("RetrievedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StorageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StoredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(8)
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("IsSoftDeleted");

                    b.HasIndex("StorageId");

                    b.ToTable("StorageOrder", (string)null);
                });

            modelBuilder.Entity("FrontDeskApp.Domain.Entities.StorageType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte>("IsSoftDeleted")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SizeType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(8)
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("IsSoftDeleted");

                    b.ToTable("StorageType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6d7bff0-2b8a-4956-99cc-46bbde703243"),
                            Code = "SMALL-TYPE",
                            IsSoftDeleted = (byte)0,
                            Name = "Small Type Storage",
                            SizeType = 1
                        },
                        new
                        {
                            Id = new Guid("c1a96f2e-1d92-4e94-b90b-df922e0b0dad"),
                            Code = "MEDIUM-TYPE",
                            IsSoftDeleted = (byte)0,
                            Name = "Medium Type Storage",
                            SizeType = 2
                        },
                        new
                        {
                            Id = new Guid("0ef3ac49-f99f-4501-8c38-2eca7b277f41"),
                            Code = "LARGE-TYPE",
                            IsSoftDeleted = (byte)0,
                            Name = "Large Type Storage",
                            SizeType = 3
                        });
                });

            modelBuilder.Entity("FrontDeskApp.Infrastructure.Identity.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("IsSoftDeleted")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(8)
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("FrontDeskApp.Infrastructure.Identity.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("IsSoftDeleted")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(8)
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("FrontDeskApp.Infrastructure.Identity.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<byte>("IsSoftDeleted")
                        .HasColumnType("tinyint");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(8)
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("FrontDeskApp.Infrastructure.Identity.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("IsSoftDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(8)
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("FrontDeskApp.Infrastructure.Identity.ApplicationUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("IsSoftDeleted")
                        .HasColumnType("tinyint");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(8)
                        .HasColumnType("timestamp");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("FrontDeskApp.Infrastructure.Identity.ApplicationUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("IsSoftDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(8)
                        .HasColumnType("timestamp");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("FrontDeskApp.Infrastructure.Identity.ApplicationUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("IsSoftDeleted")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(8)
                        .HasColumnType("timestamp");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("FrontDeskApp.Domain.Entities.Storage", b =>
                {
                    b.HasOne("FrontDeskApp.Domain.Entities.StorageType", "StorageType")
                        .WithMany("Storages")
                        .HasForeignKey("StorageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StorageType");
                });

            modelBuilder.Entity("FrontDeskApp.Domain.Entities.StorageOrder", b =>
                {
                    b.HasOne("FrontDeskApp.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FrontDeskApp.Domain.Entities.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("FrontDeskApp.Infrastructure.Identity.ApplicationRoleClaim", b =>
                {
                    b.HasOne("FrontDeskApp.Infrastructure.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FrontDeskApp.Infrastructure.Identity.ApplicationUserClaim", b =>
                {
                    b.HasOne("FrontDeskApp.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FrontDeskApp.Infrastructure.Identity.ApplicationUserLogin", b =>
                {
                    b.HasOne("FrontDeskApp.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FrontDeskApp.Infrastructure.Identity.ApplicationUserRole", b =>
                {
                    b.HasOne("FrontDeskApp.Infrastructure.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FrontDeskApp.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FrontDeskApp.Infrastructure.Identity.ApplicationUserToken", b =>
                {
                    b.HasOne("FrontDeskApp.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FrontDeskApp.Domain.Entities.StorageType", b =>
                {
                    b.Navigation("Storages");
                });
#pragma warning restore 612, 618
        }
    }
}
